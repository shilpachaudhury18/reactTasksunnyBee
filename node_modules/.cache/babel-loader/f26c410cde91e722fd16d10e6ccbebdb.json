{"ast":null,"code":"import _toConsumableArray from\"/home/shilpa/Desktop/react/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/shilpa/Desktop/react/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CheckBox=function CheckBox(_ref){var label=_ref.label;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),checked=_useState2[0],setChecked=_useState2[1];var handleChange=function handleChange(value){var currentIndex=checked.indexOf(value);var newChecked=_toConsumableArray(checked);if(currentIndex===-1){newChecked.push(value);}else{newChecked.splice(currentIndex,1);}setChecked(newChecked);};return/*#__PURE__*/_jsx(\"div\",{className:\"checkbox_style1\",children:label.map(function(category){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox_align form-check-label \",htmlFor:category.name,children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:function onChange(){return handleChange(category.id);},className:\"checkbox_style form-check-input\"}),category.name]},category.id)});})});};export default CheckBox;","map":{"version":3,"sources":["/home/shilpa/Desktop/react/task/src/components/BodyContents/CheckBox/CheckBox.js"],"names":["React","useState","CheckBox","label","checked","setChecked","handleChange","value","currentIndex","indexOf","newChecked","push","splice","map","category","name","id"],"mappings":"oTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,6IAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CAC9B,cAA8BF,QAAQ,CAAC,EAAD,CAAtC,wCAAOG,OAAP,eAAgBC,UAAhB,eACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9B,GAAMC,CAAAA,YAAY,CAAGJ,OAAO,CAACK,OAAR,CAAgBF,KAAhB,CAArB,CACA,GAAMG,CAAAA,UAAU,oBAAON,OAAP,CAAhB,CAEA,GAAII,YAAY,GAAK,CAAC,CAAtB,CAAyB,CACvBE,UAAU,CAACC,IAAX,CAAgBJ,KAAhB,EACD,CAFD,IAEO,CACLG,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,CAAgC,CAAhC,EACD,CACDH,UAAU,CAACK,UAAD,CAAV,CACD,CAVD,CAWA,mBACE,YAAK,SAAS,CAAC,iBAAf,UACGP,KAAK,CAACU,GAAN,CAAU,SAACC,QAAD,qBACT,sCACE,eAAyB,SAAS,CAAC,kCAAnC,CAAsE,OAAO,CAAEA,QAAQ,CAACC,IAAxF,wBACE,cACE,IAAI,CAAC,UADP,CAEE,QAAQ,CAAE,0BAAMT,CAAAA,YAAY,CAACQ,QAAQ,CAACE,EAAV,CAAlB,EAFZ,CAGI,SAAS,CAAC,iCAHd,EADF,CAMGF,QAAQ,CAACC,IANZ,GAAYD,QAAQ,CAACE,EAArB,CADF,EADS,EAAV,CADH,EADF,CAgBD,CA7BD,CAoCA,cAAed,CAAAA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBox = ({ label }) => {\n  const [checked, setChecked] = useState([]);\n  const handleChange = (value) => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n  return (\n    <div className=\"checkbox_style1\">\n      {label.map((category) => (\n        <>\n          <label key={category.id} className=\"checkbox_align form-check-label \" htmlFor={category.name}>\n            <input\n              type=\"checkbox\"\n              onChange={() => handleChange(category.id)}\n                className=\"checkbox_style form-check-input\"\n            />\n            {category.name}\n          </label>\n        </>\n      ))}\n    </div>\n  );\n};\n\nCheckBox.propTypes = {\n  selected: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport default CheckBox;"]},"metadata":{},"sourceType":"module"}